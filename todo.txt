



ok now at backend at ac what it does is 


rm -f ./target/deploy/ac-keypair.json
anchor build
anchor deploy --provider.cluster devnet

this deploys the lib.rs file in src directory 

now before deployment lets say this was what is stored in   const contractCode = req.body.contract_code;
  
rewrite this in lib.rs and run these 3 

rm -f ./target/deploy/ac-keypair.json
anchor build
anchor deploy --provider.cluster devnet 



ex) 
use anchor_lang::prelude::*;

declare_id!("9zuEtiy6MeucRyUTkUTy8ydX9A35cKBawnrHkU3CULvf");


#[program]
mod voting_contract {
    use super::*;

    pub fn initialize(ctx: Context<Initialize>) -> Result<()> {
        let voting_account = &mut ctx.accounts.voting_account;
        voting_account.proposal = String::from("");
        voting_account.votes_for = 0;
        voting_account.votes_against = 0;
        Ok(())
    }

    pub fn create_proposal(ctx: Context<CreateProposal>, proposal: String) -> Result<()> {
        let voting_account = &mut ctx.accounts.voting_account;
        voting_account.proposal = proposal;
        voting_account.votes_for = 0;
        voting_account.votes_against = 0;
        Ok(())
    }

    pub fn vote(ctx: Context<Vote>, support: bool) -> Result<()> {
        let voting_account = &mut ctx.accounts.voting_account;
        if support {
            voting_account.votes_for += 1;
        } else {
            voting_account.votes_against += 1;
        }
        Ok(())
    }
}

#[derive(Accounts)]
pub struct Initialize<'info> {
    #[account(init, payer = user, space = 8 + 40)]
    pub voting_account: Account<'info, VotingAccount>,
    #[account(mut)]
    pub user: Signer<'info>,
    pub system_program: Program<'info, System>,
}

#[derive(Accounts)]
pub struct CreateProposal<'info> {
    #[account(mut)]
    pub voting_account: Account<'info, VotingAccount>,
}

#[derive(Accounts)]
pub struct Vote<'info> {
    #[account(mut)]
    pub voting_account: Account<'info, VotingAccount>,
}

#[account]
pub struct VotingAccount {
    pub proposal: String,
    pub votes_for: u32,
    pub votes_against: u32,
}
